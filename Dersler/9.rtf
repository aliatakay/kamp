{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset162 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil\fcharset0 Calibri;}{\f3\fnil Consolas;}{\f4\fnil\fcharset162 Consolas;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red0\green0\blue0;\red0\green176\blue80;\red75\green172\blue198;\red155\green0\blue211;}
{\*\generator Riched20 10.0.17763}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qj\f0\fs28 Kamp\f1\u305?\f0 n 1 ay daha uzat\f1\u305?\f0 laca\f1\u287?\u305?\f0  a\f2\lang1033\'e7\f1\lang1055\u305?\f0 kland\f1\u305?\f0 .\par
Kamp bitiminden 20 g\f2\lang1033\'fc\f0\lang1055 n sonra s\f1\u305?\f0 nav yap\f1\u305?\f0 laca\f1\u287?\u305?\f0  duyuruldu.\par
S\f1\u305?\f0 nav zor olacak ve s\f1\u305?\f0 nav\f1\u305?\f0  ge\f2\lang1033\'e7\f0\lang1055 enler sertifika alacak. Engin hoca, sertifika alanlar\f1\u305?\f0  LinkedIn hesab\f1\u305?\f0 ndan payla\f1\'ba\f0 arak, yaz\f1\u305?\f0 l\f1\u305?\f0 m firmalar\f1\u305?\f0 n\f1\u305?\f0 n \f2\lang1033\'f6\f1\lang1055\u287?\f0 rencileri fark etmesini sa\f1\u287?\f0 layacak.\par
------------------------------------------------------------------------------------------------\par
Ge\f2\lang1033\'e7\f0\lang1055 ti\f1\u287?\f0 imiz derslerde Kurumsal Mimarinin temellerini atm\f1\u305?\'ba\f0 t\f1\u305?\f0 k. Ve projeyi Entity Framework ile ili\f1\'ba\f0 kilendirmi\f1\'ba\f0 tik. Fakat hen\f2\lang1033\'fc\f0\lang1055 z yap\f1\u305?\f0 lanlar soyutlama ve SOLID prensipleri anlam\f1\u305?\f0 nda yeterli de\f1\u287?\f0 il. Bu derste bununla alakl\f1\u305?\f0  geli\f1\'ba\f0 tirmelere devam edece\f1\u287?\f0 iz.\par
\par
\cf1 Burada \f2\lang1033\'e7\f0\lang1055 ok \f2\lang1033\'f6\f0\lang1055 nemli bir soyutlama tekni\f1\u287?\f0 i daha uygulayaca\f1\u287?\u305?\f0 z.\par
\cf0 Data Access katman\f1\u305?\f0 nda, t\f2\lang1033\'fc\f0\lang1055 m entity'ler i\f2\lang1033\'e7\f0\lang1055 in Dal s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0  yazm\f1\u305?\'ba\f0 t\f1\u305?\f0 k.\par
EfProductDal, EfCategoryDal vb. gibi.\par
Biz b\f2\lang1033\'fc\f0\lang1055 t\f2\lang1033\'fc\f0\lang1055 n bu Dal s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0 nda tamamen \cf1 ayn\f1\u305?\f0  CRUD operasyonlar\f1\u305?\cf0\f0 n\f1\u305?\f0  yaz\f1\u305?\f0 yoruz.\par
\par
\f2\lang1033\'d6\f0\lang1055 rnek olarak a\f1\'ba\f0 a\f1\u287?\u305?\f0 daki operasyona bakal\f1\u305?\f0 m.\par
\par

\pard\sa200\sl276\slmult1\cf2\f3\fs24 public\cf3  \cf4 Product \cf3 Get(\cf4 Expression\cf3 <\cf4 Func\cf3 <\cf4 Product\cf3 , \cf2 bool\cf3 >> \cf5 filter\cf3 )\par
\{\par
    \f4  \cf2\f3 using\cf3  (\cf4 NorthwindContext \cf5 context \cf3 = \cf2 new\cf3  \cf4 NorthwindContext\cf3 ())\par
     \{\par
\f4\tab    \cf2\f3 return\cf3  \cf5 context\cf3 .Set<\cf4 Product\cf3 >().SingleOrDefault(\cf5 filter\cf3 );\par
     \}\par
\}\par
\par
\cf2 public\cf3  \cf4\f4 Category\f3  \cf3 Get(\cf4 Expression\cf3 <\cf4 Func\cf3 <\cf4\f4 Category\cf3\f3 , \cf2 bool\cf3 >> \cf5 filter\cf3 )\par
\{\par
    \f4  \cf2\f3 using\cf3  (\cf4 NorthwindContext \cf5 context \cf3 = \cf2 new\cf3  \cf4 NorthwindContext\cf3 ())\par
     \{\par
\f4\tab   \cf2\f3 return\cf3  \cf5 context\cf3 .Set<\cf4\f4 Category\cf3\f3 >().SingleOrDefault(\cf5 filter\cf3 );\par
     \}\par
\}\par
\par
\cf0\f0\fs28 G\f2\lang1033\'f6\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 ld\f2\lang1033\'fc\f1\lang1055\u287?\f2\lang1033\'fc\f0\lang1055  \f2\lang1033\'fc\f0\lang1055 zere Product ve Category i\f2\lang1033\'e7\f0\lang1055 in yaz\f1\u305?\f0 lan Dal operasyonlar\f1\u305?\f0  tamamen ayn\f1\u305?\f0 .\par
Yaln\f1\u305?\f0 zca 2 adet de\f1\u287?\f0 i\f1\'ba\f0 ebilecek yap\f1\u305?\f0  var.\par
\cf1 Operasyonda, \f2\lang1033\'fc\f0\lang1055 zerinde \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 t\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z entity tipi (Product - Category...)\par
Operasyonda, \f2\lang1033\'fc\f0\lang1055 zerinde \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 t\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z context \f2\lang1033\'e7\f0\lang1055 e\f1\'ba\f0 idi (NorthwindContext ...)\cf0\par
\cf6 ***********************************************************\par
\f1\u304?\'ba\f0 te bu 2 yap\f1\u305?\f0 y\f1\u305?\f0  da Generic olarak tan\f1\u305?\f0 mlayabilece\f1\u287?\f0 imiz bir Base S\f1\u305?\f0 n\f1\u305?\f0 f yazabiliriz.\par
***********************************************************\cf0\par
DataAccess'teki bu yap\f1\u305?\f0 lar\f1\u305?\f0 , bir Base s\f1\u305?\f0 n\f1\u305?\f0 fa ta\f1\'ba\u305?\f0 yarak, Generic bir hale d\f2\lang1033\'f6\f0\lang1055 n\f2\lang1033\'fc\f1\lang1055\'ba\f0 t\f2\lang1033\'fc\f0\lang1055 rebiliriz. \par
Generic yap\f1\u305?\f0 ya, \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 mak istedi\f1\u287?\f0 imiz entity ile \f2\lang1033\'e7\f0\lang1055 al\f1\u305?\'ba\f0 mak istedi\f1\u287?\f0 imiz context'i vererek yap\f1\u305?\f0 y\f1\u305?\f0  rahatl\f1\u305?\f0 kla olu\f1\'ba\f0 turabiliriz.\par
\par
Burada \f2\lang1033\'e7\f0\lang1055 ok \f2\lang1033\'f6\f0\lang1055 nemli bir olay devreye giriyor.\par
Biz Data Access katman\f1\u305?\f0 nda, CRUD operasyonlar\f1\u305?\f0 n\f1\u305?\f0  i\f2\lang1033\'e7\f0\lang1055 eren generic bir Interface yazm\f1\u305?\'ba\f0 t\f1\u305?\f0 k. Bu interface t\f2\lang1033\'fc\f0\lang1055 m yap\f1\u305?\f0 lardan ba\f1\u287?\u305?\f0 ms\f1\u305?\f0 z, her sisteme adapte edilebilen, tamamen soyut bir yap\f1\u305?\f0 yd\f1\u305?\f0 .\par
Biz birebir ayn\f1\u305?\f0  interface'i hem Northwind projemizde hem de Car projemizde yazd\f1\u305?\f0 k.\par
\f1\u304?\'ba\f0 te bu tip "t\f2\lang1033\'fc\f0\lang1055 m tiplerden ba\f1\u287?\u305?\f0 ms\f1\u305?\f0 z ve her sistemin ortak ihtiyac\f1\u305?\f0  olabilecek" yap\f1\u305?\f0 lar\f1\u305?\f0 , ba\f1\'ba\f0 ka bir projede konumland\f1\u305?\f0 rmal\f1\u305?\f0 y\f1\u305?\f0 z. (Core ad\f1\u305?\f0 nda yeni bir ClassLibrary projesi yaratarak).\par
Bu sayede biz t\f2\lang1033\'fc\f0\lang1055 m Solution'lar\f1\u305?\f0 m\f1\u305?\f0 zda bu projeyi kullanabiliriz.\par
(loglama, transaction, cache, aop vb. yap\f1\u305?\f0 lar\f1\u305?\f0  \f2\lang1033\'f6\f0\lang1055 rne\f1\u287?\f0 in, Core katman\f1\u305?\f0 nda konumland\f1\u305?\f0 rabiliriz. \f1\u304?\f0 lerleyen derslerde bunlar\f1\u305?\f0  da g\f2\lang1033\'f6\f0\lang1055 rece\f1\u287?\f0 iz. Sonu\f2\lang1033\'e7\f0\lang1055  olarak Core katman\f1\u305?\f0  son derece \f2\lang1033\'f6\f0\lang1055 nemli ve gereklidir. Kamp\f1\u305?\f0 n son 1 ay\f1\u305?\f0 nda bu Core katman\f1\u305?\f0 na odaklanaca\f1\u287?\u305?\f0 z.)\par
\cf1 Burada bahsi ge\f2\lang1033\'e7\f0\lang1055 en Core, katmana verdi\f1\u287?\f0 imiz isimdir. Proje \f2\lang1033\'e7\f0\lang1055 ekirde\f1\u287?\f0 i anlam\f1\u305?\f0 nda.\par
.NET Core ile alakas\f1\u305?\f0  yoktur.\par
\cf0\par
solution \f2\lang1033\'fc\f0\lang1055 zerinden yeni bir proje ekliyoruz. Core isminde bir classlibrary.\par
burada evrensel kodlar\f1\u305?\f0 m\f1\u305?\f0 z\f1\u305?\f0  bar\f1\u305?\f0 nd\f1\u305?\f0 raca\f1\u287?\u305?\f0 z. yani t\f2\lang1033\'fc\f0\lang1055 m projelerde kullan\f1\u305?\f0 lacak olan kodlar\f1\u305?\f0 m\f1\u305?\f0 z burada olacak.\par
Bu katman alt\f1\u305?\f0 nda yeni klas\f2\lang1033\'f6\f0\lang1055 rler olu\f1\'ba\f0 turaca\f1\u287?\u305?\f0 z. ve bu klas\f2\lang1033\'f6\f0\lang1055 rler kodlar\f1\u305?\f0 m\f1\u305?\f0 z\f1\u305?\f0 n "hangi katmana hizmet edece\f1\u287?\f0 ini" belirtiyor olacak.\par
Bu sebepten, DataAccess ad\f1\u305?\f0 nda bir klas\f2\lang1033\'f6\f0\lang1055 r olu\f1\'ba\f0 turuyoruz ilk olarak.\f2\lang1033\par
\f0\lang1055\par
ilk olarak IEntityRepository itemini ta\f1\'ba\u305?\f0 yabilece\f1\u287?\f0 imi s\f2\lang1033\'f6\f0\lang1055 ylemi\f1\'ba\f0 tik. bundan dolay\f1\u305?\f0  IEntityRepository itemini kesiyoruz ve core > dataaccess klas\f2\lang1033\'f6\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055 ne yap\f1\u305?\'ba\u305?\f0 t\f1\u305?\f0 r\f1\u305?\f0 yoruz.\par
\par
namespace: ili\f1\'ba\f0 kili classlar\f1\u305?\f0  ayn\f1\u305?\f0  isim uzay\f1\u305?\f0 na koyar\f1\u305?\f0 z. ve gerekti\f1\u287?\f0 i yerde bu isim uzay\f1\u305?\f0 n\f1\u305?\f0  using ile dahil ederiz.\par
\par
biz IEntityRepository itemini core katman\f1\u305?\f0 na yap\f1\u305?\'ba\f0 t\f1\u305?\f0 r\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z i\f2\lang1033\'e7\f0\lang1055 in namespace eskisi gibi kald\f1\u305?\f0 . onu d\f2\lang1033\'fc\f0\lang1055 zeltmemiz gerekiyor.\par
\cf3 Core.DataAccess olarak d\f2\lang1033\'fc\f0\lang1055 zeltiyoruz.\par
\cf0\par
Burada \f2\lang1033\'e7\f0\lang1055 ok \f2\lang1033\'f6\f0\lang1055 nemli bir nokta devreye giriyor.\par
IEntityRepository'yi Core katman\f1\u305?\f0 na ta\f1\'ba\u305?\f0 d\f1\u305?\u287?\u305?\f0 m zaman, IEntity k\f1\u305?\f0 sm\f1\u305?\f0  hata verecek. \f2\lang1033\'c7\'fc\f0\lang1055 nk\f2\lang1033\'fc\f0\lang1055  bu interface Entities katman\f1\u305?\f0 na ait bir item.\par
\cf1 Biz burada Core katman\f1\u305?\f0 na referans ekleyemeyiz.\par
\cf6 ***********************************************************\par
Core katman\f1\u305?\f0 na asla ba\f1\'ba\f0 ka bir katman\f1\u305?\f0 n referans\f1\u305?\f0  eklenmemelidir.   \f2\lang1033\'c7\'fc\f0\lang1055 nk\f2\lang1033\'fc\f0\lang1055  Core katman\f1\u305?\f0  evrensel bir yap\f1\u305?\f0 d\f1\u305?\f0 r. \f1\u304?\f2\lang1033\'e7\f0\lang1055 erisinde hi\f2\lang1033\'e7\f0\lang1055 bir ba\f1\'ba\f0 ka katmana ait ba\f1\u287?\u305?\f0 ml\f1\u305?\f0 l\f1\u305?\f0 k olamaz.\par
***********************************************************\cf0\par
Madem Entities katman\f1\u305?\f0 n\f1\u305?\f0  Core katman\f1\u305?\f0 na referans veremiyoruz.            O halde bu referans sorununu nas\f1\u305?\f0 l \f2\lang1033\'e7\'f6\f0\lang1055 zece\f1\u287?\f0 iz?\par
\f1\u304?\'ba\f0 te tam bu noktada, IEntity interface'ini de Core katman\f1\u305?\f0 na ta\f1\'ba\u305?\f0 mam\f1\u305?\f0 z gerekti\f1\u287?\f0 ini anl\f1\u305?\f0 yoruz. \f2\lang1033\'c7\'fc\f0\lang1055 nk\f2\lang1033\'fc\f0\lang1055  IEntity; kendisini implemente eden s\f1\u305?\f0 n\f1\u305?\f0 flar\f1\u305?\f0 n birer database varl\f1\u305?\u287?\u305?\f0  oldu\f1\u287?\f0 unu belirtiyordu. Demek ki bu evrensel bir yap\f1\u305?\f0 d\f1\u305?\f0 r. O halde Core katman\f1\u305?\f0 na ta\f1\'ba\u305?\f0 nmal\f1\u305?\f0 d\f1\u305?\f0 r.\par
Core > Entities klas\f2\lang1033\'f6\f0\lang1055 r\f2\lang1033\'fc\f0\lang1055  olu\f1\'ba\f0 turuyoruz. Ve IEntity interfaceini buraya ta\f1\'ba\u305?\f0 yoruz.\par
Gerekli referans hatalar\f1\u305?\f0 n\f1\u305?\f0  d\f2\lang1033\'fc\f0\lang1055 zeltiyoruz bu a\f1\'ba\f0 amada. ta\f1\'ba\u305?\f0 malar yapt\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z i\f2\lang1033\'e7\f0\lang1055 in eski ba\f1\u287?\u305?\f0 ml\f1\u305?\f0 l\f1\u305?\f0 klar de\f1\u287?\f0 i\f1\'ba\f0 mi\f1\'ba\f0  oldu.\par
\par
\par
---------------------------------------------------------------------\par
\b Dakika 2:26:00\par
DTO nedir ve neden ihtiya\f2\lang1033\'e7\f0\lang1055  duyulur?\par
\b0 Bug\f2\lang1033\'fc\f0\lang1055 ne kadar yazd\f1\u305?\u287?\u305?\f0 m\f1\u305?\f0 z DAL operasyonlar\f1\u305?\f0  ile yaln\f1\u305?\f0 zca "tek tablo" \f2\lang1033\'fc\f0\lang1055 zerinden verilere ula\f1\'ba\f0 abiliyorduk.\par
\f2\lang1033\'d6\f0\lang1055 rne\f1\u287?\f0 in;\par
\tab\cf5\b product\cf0 .ProductName + \cf5 product\cf0 .CategoryId;\par
\b0 sadece yukar\f1\u305?\f0 daki gibi tek tabloya ait s\f2\lang1033\'fc\f0\lang1055 tunlara eri\f1\'ba\f0 ebiliyorduk. \par
\par
Ancak biz tablolar\f1\u305?\f0 n JOIN edilmesiyle olu\f1\'ba\f0 an, farkl\f1\u305?\f0  tablolara ait s\f2\lang1033\'fc\f0\lang1055 tun bilgilerine de ula\f1\'ba\f0 mak isteyebiliriz.\par
\f2\lang1033\'d6\f0\lang1055 rne\f1\u287?\f0 in;\par
\tab\cf5\b product\cf0 .ProductName + \cf5 category\cf0 .CategoryName;\par
\b0 yukar\f1\u305?\f0 da 2 farkl\f1\u305?\f0  tabloya ait s\f2\lang1033\'fc\f0\lang1055 tun bilgileri bulunmaktad\f1\u305?\f0 r. Dolay\f1\u305?\f0 s\f1\u305?\f0 yla elimizdeki kodlarla bu sonucu elde edemeyiz.\par
\par
\f1\u304?\'ba\f0 te tam bu sebepten dolay\f1\u305?\f0 , DTO ihtiyac\f1\u305?\f0  olu\f1\'ba\f0 maktad\f1\u305?\f0 r.\par
Projemizde, tablolar\f1\u305?\f0  tekil olarak kapsayan s\f1\u305?\f0 n\f1\u305?\f0 flar ve dolay\f1\u305?\f0 s\f1\u305?\f0 yla nesneler bulunmaktad\f1\u305?\f0 r. 2 tabloyu JOIN ederek ortaya \f2\lang1033\'e7\f1\lang1055\u305?\f0 kan yap\f1\u305?\f0 ya kar\f1\'ba\u305?\f0 l\f1\u305?\f0 k, kod taraf\f1\u305?\f0 nda bir nesne bulunmamaktad\f1\u305?\f0 r.\par
Bundan dolay\f1\u305?\f0  Entities katman\f1\u305?\f0 nda DTOs ad\f1\u305?\f0 nda bir klas\f2\lang1033\'f6\f0\lang1055 r olu\f1\'ba\f0 turaca\f1\u287?\u305?\f0 z. Burada, JOIN sonucu ortaya \f2\lang1033\'e7\f1\lang1055\u305?\f0 kan yeni yap\f1\u305?\f0 lar\f1\u305?\f0 n, nesne kar\f1\'ba\u305?\f0 l\f1\u305?\f0 klar\f1\u305?\f0 n\f1\u305?\f0  in\f1\'ba\f0 a edece\f1\u287?\f0 iz.\par
\cf1\b DTO: Data Transformation Object\par
\cf0\b0\par
\par
\par
\f2\fs24\lang31\par

\pard\sa200\sl276\slmult1\qj\fs28\par
}
 